apply plugin: 'com.android.application'
apply plugin: 'android-apt'
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.xiaohuijun.administrator.mymvp"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        // dex突破65535的限制
        multiDexEnabled true
    }

//执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
    }
//签名
//signingConfigs {
//    debug {
//        storeFile file("F:\\android/android.keystore")
//    }
//    relealse {
//        storeFile file("demo.jks")
//        storePassword "demo123456"
//        keyAlias "demo_4"
//        keyPassword "demo123456"
//    }
//}
    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            //           signingConfig signingConfigs.debug
        }
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //加载默认混淆配置文件 progudard-android.txt在sdk目录里面，不用管，proguard.cfg是我们自己配<span></span>的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            //          signingConfig signingConfigs.relealse
        }
    }
//渠道Flavors，我这里写了一些常用的
    productFlavors {
        GooglePlay {}
        xiaomi {}
        umeng {}
    }
//jdk版本
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_7
//        targetCompatibility JavaVersion.VERSION_1_7
//    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    dependencies {
        compile fileTree(include: ['*.jar'], dir: 'libs')
        compile project(':alertview')
        compile project(':progressdialog')
        compile project(':social_sdk_library_project')
        testCompile 'junit:junit:4.12'
        compile 'com.android.support:design:24.0.0'
        compile 'com.android.support:support-v4:24.0.0'
        compile 'com.android.support:appcompat-v7:24.0.0'
        
        compile "org.projectlombok:lombok:1.12.6"
        compile 'com.android.databinding:baseLibrary:2.1.2'
        compile 'com.android.support:recyclerview-v7:24.0.0'
        compile 'com.android.support:cardview-v7:24.0.0'

        // Retrofit for rest client
        // https://github.com/square/retrofit
        compile 'com.squareup.retrofit2:retrofit:2.1.0'
        compile 'com.squareup.retrofit2:converter-gson:2.1.0'
        compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'

        // OkHttp logging interceptor
        // https://github.com/square/okhttp/wiki/Interceptors
        compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'

        // RxAndroid
        // https://github.com/ReactiveX/RxAndroid
        // https://github.com/ReactiveX/RxJava
        // https://github.com/ReactiveX/RxJavaJoins
        compile 'io.reactivex:rxandroid:1.2.1'

        // Because RxAndroid releases are few and far between, it is recommended you also
        // explicitly depend on RxJava's latest version for bug fixes and new features.
        compile 'io.reactivex:rxjava:1.1.6'

        // Rx Life Cycle
        // https://github.com/trello/RxLifecycle
        compile 'com.trello:rxlifecycle:0.6.1'
        compile 'com.trello:rxlifecycle-components:0.6.1'

        // RxBinding
        // https://github.com/JakeWharton/RxBinding
        compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
        compile 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
        compile 'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'

        // ButterKnife
        // https://github.com/JakeWharton/butterknife
        compile 'com.jakewharton:butterknife:8.1.0'
        apt 'com.jakewharton:butterknife-compiler:8.1.0'
        // Glide for image loader
        // https://github.com/bumptech/glide
        compile 'com.github.bumptech.glide:glide:3.7.0'
        compile 'jp.wasabeef:glide-transformations:2.0.0'

        compile 'com.bm.photoview:library:1.4.0'
        //https://github.com/googlesamples/easypermissions
        compile 'pub.devrel:easypermissions:0.1.9'

        //https://github.com/saiwu-bigkoo/Android-ConvenientBanner
        compile 'com.bigkoo:convenientbanner:2.0.5'

    }
}
